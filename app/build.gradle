apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.byounghong.weatherforecas"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"
    productFlavors {
        dev {
            buildConfigField "String", 'SERVER_URL', "\"https://www.metaweather.com/api/\""
        }
        standby{
            buildConfigField "String", 'SERVER_URL', "\"https://www.metaweather.com/api/\""
        }
        product {
            buildConfigField "String", 'SERVER_URL', "\"https://www.metaweather.com/api/\""
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures{
        viewBinding = true
        dataBinding = true
    }
}

dependencies {
    def versions = rootProject.ext.libraries_version

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin"
    implementation "androidx.core:core-ktx:$versions.ktx"
    implementation "androidx.appcompat:appcompat:$versions.appCompat"
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"

    implementation "androidx.recyclerview:recyclerview:$versions.recyclerView"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintLayout"
    implementation "androidx.fragment:fragment-ktx:$versions.fragment"
    implementation "androidx.activity:activity-ktx:$versions.activity"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$versions.swiperefreshlayout"

    // Dagger Core
    implementation "com.google.dagger:dagger:$versions.dagger"
    kapt "com.google.dagger:dagger-compiler:$versions.dagger"

    // Dagger Android
    api "com.google.dagger:dagger-android:$versions.dagger_android"
    api "com.google.dagger:dagger-android-support:$versions.dagger_android"
    kapt "com.google.dagger:dagger-android-processor:$versions.dagger_android"

    //Dagger - Hilt
    implementation "com.google.dagger:hilt-android:$versions.dagger_hilt"
    kapt "com.google.dagger:hilt-android-compiler:$versions.dagger_hilt"

    // Hilt ViewModel extension
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$versions.hilt_jetpack"
    kapt "androidx.hilt:hilt-compiler:$versions.hilt_jetpack"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.google.code.gson:gson:$versions.gson"
    implementation "com.squareup.retrofit2:converter-gson:$versions.converter"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"

    //Test
    testImplementation "junit:junit:$versions.junit"
    androidTestImplementation "androidx.test.ext:junit:$versions.androidx_test"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso"

    //Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"

    //Coil
    implementation("io.coil-kt:coil:$versions.coil")
    implementation("io.coil-kt:coil-svg:$versions.coil")

}